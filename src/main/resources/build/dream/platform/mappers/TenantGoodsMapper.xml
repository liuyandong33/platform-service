<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="build.dream.platform.mappers.TenantGoodsMapper">
    <insert id="insert" parameterType="build.dream.common.saas.domains.TenantGoods" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO tenant_goods(tenant_id, branch_id, goods_id,
        expiry_time, create_user_id, last_update_user_id,
        last_update_remark)
        VALUES(#{tenantId}, #{branchId}, #{goodsId},
        #{expiryTime}, #{createUserId}, #{lastUpdateUserId},
        #{lastUpdateRemark})
    </insert>

    <update id="update" parameterType="build.dream.common.saas.domains.TenantGoods">
        UPDATE tenant_goods
        SET tenant_id = #{tenantId},
            branch_id = #{branchId},
            goods_id = #{goodsId},
            expiry_time = #{expiryTime},
            create_user_id = #{createUserId},
            last_update_user_id = #{lastUpdateUserId},
            last_update_remark = #{lastUpdateRemark},
            deleted = #{deleted}
        WHERE id = #{id}
    </update>

    <select id="find" parameterType="build.dream.common.utils.SearchModel" resultType="build.dream.common.saas.domains.TenantGoods">
        SELECT ${selectColumns} FROM app_authority <include refid="searchConditionSql"></include>
    </select>

    <select id="findAll" parameterType="build.dream.common.utils.SearchModel" resultType="build.dream.common.saas.domains.TenantGoods">
        SELECT ${selectColumns} FROM app_authority <include refid="searchConditionSql"></include>
    </select>

    <sql id="searchConditionSql">
        WHERE
        <foreach collection="searchConditions" index="index" item="searchCondition" separator=" AND ">
            <choose>
                <when test="@org.apache.commons.lang.StringUtils@equalsIgnoreCase(searchCondition.operationSymbol, 'IN')">
                    ${searchCondition.columnName} ${searchCondition.operationSymbol}
                    <foreach collection="searchCondition.searchParameter" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    ${searchCondition.columnName} ${searchCondition.operationSymbol} #{searchCondition.searchParameter}
                </otherwise>
            </choose>
        </foreach>
    </sql>

    <select id="findAllGoodses" resultType="build.dream.common.utils.UnderscoreToCamelCaseMap">
        SELECT
        tenant_goods.tenant_id,
        tenant_goods.branch_id,
        tenant_goods.expiry_time,
        tenant_goods.goods_id,
        goods.name
        FROM tenant_goods
        LEFT OUTER JOIN goods ON tenant_goods.goods_id = goods.id
        WHERE tenant_goods.tenant_id = #{tenantId}
        AND tenant_goods.branch_id = #{branchId}
    </select>

    <select id="findGoods" resultType="build.dream.common.utils.UnderscoreToCamelCaseMap">
        SELECT
        tenant_goods.tenant_id,
        tenant_goods.branch_id,
        tenant_goods.expiry_time,
        tenant_goods.goods_id,
        goods.name
        FROM tenant_goods
        LEFT OUTER JOIN goods ON tenant_goods.goods_id = goods.id
        WHERE tenant_goods.tenant_id = #{tenantId}
        AND tenant_goods.goods_id = #{goodsId}
    </select>
</mapper>