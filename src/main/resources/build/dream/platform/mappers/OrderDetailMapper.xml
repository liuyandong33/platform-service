<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="build.dream.platform.mappers.OrderDetailMapper">
    <insert id="insert" parameterType="build.dream.common.saas.domains.OrderDetail" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO order_detail(order_id, goods_id, goods_name,
        goods_specification_id, goods_specification_name, branch_id,
        price, discount_amount, payable_amount,
        amount, create_user_id, last_update_user_id,
        last_update_remark)
        VALUES(#{orderId}, #{goodsId}, #{goodsName},
        #{goodsSpecificationId}, #{goodsSpecificationName}, #{branchId},
        #{price}, #{discountAmount}, #{payableAmount},
        #{amount}, #{createUserId}, #{lastUpdateUserId},
        #{lastUpdateRemark})
    </insert>

    <insert id="insertAll" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO order_detail(order_id, goods_id, goods_name,
        goods_specification_id, goods_specification_name, branch_id,
        price, discount_amount, payable_amount,
        amount, create_user_id, last_update_user_id,
        last_update_remark)
        VALUES
        <foreach collection="list" index="index" item="orderDetail" separator=",">
            (#{orderDetail.orderId}, #{orderDetail.goodsId}, #{orderDetail.goodsName},
            #{orderDetail.goodsSpecificationId}, #{orderDetail.goodsSpecificationName}, #{orderDetail.branchId},
            #{orderDetail.price}, #{orderDetail.discountAmount}, #{orderDetail.payableAmount},
            #{orderDetail.amount}, #{orderDetail.createUserId}, #{orderDetail.lastUpdateUserId},
            #{orderDetail.lastUpdateRemark})
        </foreach>
    </insert>

    <update id="update" parameterType="build.dream.common.saas.domains.OrderDetail">
        UPDATE order_detail
        SET order_id = #{orderId},
            goods_id = #{goodsId},
            goods_name = #{goodsName},
            goods_specification_id = #{goodsSpecificationId},
            goods_specification_name = #{goodsSpecificationName},
            branch_id = #{branchId},
            price = #{price},
            discount_amount = #{discountAmount},
            payable_amount = #{payableAmount},
            amount = #{amount},
            create_user_id = #{createUserId},
            last_update_user_id = #{lastUpdateUserId},
            last_update_remark = #{lastUpdateRemark},
            deleted = #{deleted}
        WHERE id = #{id}
    </update>

    <select id="find" parameterType="build.dream.common.utils.SearchModel" resultType="build.dream.common.saas.domains.OrderDetail">
        SELECT * FROM order_detail <include refid="searchConditionSql"></include>
    </select>

    <select id="findAll" parameterType="build.dream.common.utils.SearchModel" resultType="build.dream.common.saas.domains.OrderDetail">
        SELECT * FROM order_detail <include refid="searchConditionSql"></include>
    </select>

    <select id="findAllPaged" parameterType="build.dream.common.utils.SearchModel" resultType="build.dream.common.saas.domains.OrderDetail">
        SELECT * FROM order_detail <include refid="searchConditionSql"></include> <include refid="paginationSql"></include>
    </select>

    <sql id="searchConditionSql">
        WHERE
        <foreach collection="searchConditions" index="index" item="searchCondition" separator=" AND ">
            <choose>
                <when test="@org.apache.commons.lang.StringUtils@equalsIgnoreCase(searchCondition.operationSymbol, 'IN')">
                    ${searchCondition.columnName} ${searchCondition.operationSymbol}
                    <foreach collection="searchCondition.searchParameter" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    ${searchCondition.columnName} ${searchCondition.operationSymbol} #{searchCondition.searchParameter}
                </otherwise>
            </choose>
        </foreach>
    </sql>

    <sql id="paginationSql">
        LIMIT #{offset}, #{maxResults}
    </sql>

    <update id="deleteAllByOrderIds">
        UPDATE order_detail SET deleted = 1, last_update_remark = #{lastUpdateRemark} WHERE order_id IN
        <foreach collection="orderIds" index="index" item="orderId" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </update>
</mapper>