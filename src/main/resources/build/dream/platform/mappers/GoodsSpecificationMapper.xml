<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="build.dream.platform.mappers.GoodsSpecificationMapper">
    <insert id="insert" parameterType="build.dream.common.saas.domains.GoodsSpecification" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO goods_specification(name, goods_id, allow_tenant_buy,
        allow_agent_buy, renewal_time, create_user_id,
        last_update_user_id, last_update_remark)
        VALUES (#{name}, #{goodsId}, #{allowTenantBuy},
        #{allowAgentBuy}, #{renewalTime}, #{createUserId},
        #{lastUpdateUserId}, #{lastUpdateRemark})
    </insert>

    <update id="update" parameterType="build.dream.common.saas.domains.GoodsSpecification">
        UPDATE goods_specification
        SET name = #{name},
        goods_id = #{goods_id},
        allow_tenant_buy = #{allowTenantBuy},
        allow_agent_buy = #{allowAgentBuy},
        renewal_time = #{renewalTime},
        create_user_id = #{createUserId},
        last_update_user_id = #{lastUpdateUserId},
        last_update_remark = #{lastUpdateRemark}
        WHERE id = #{id}
    </update>

    <select id="findAll" parameterType="build.dream.common.utils.SearchModel" resultType="build.dream.common.saas.domains.GoodsSpecification">
        SELECT * FROM goods_specification <include refid="searchConditionSql"></include>
    </select>

    <select id="findAllPaged" parameterType="build.dream.common.utils.SearchModel" resultType="build.dream.common.saas.domains.GoodsSpecification">
        SELECT * FROM goods_specification <include refid="searchConditionSql"></include> <include refid="paginationSql"></include>
    </select>

    <sql id="searchConditionSql">
        WHERE
        <foreach collection="searchConditions" index="index" item="searchCondition" separator=" AND ">
            <choose>
                <when test="@org.apache.commons.lang.StringUtils@equalsIgnoreCase(searchCondition.operationSymbol, 'IN')">
                    ${searchCondition.columnName} ${searchCondition.operationSymbol}
                    <foreach collection="searchCondition.searchParameter" index="index" item="item" open="(" separator="," close=")">
                        #{item}
                    </foreach>
                </when>
                <otherwise>
                    ${searchCondition.columnName} ${searchCondition.operationSymbol} #{searchCondition.searchParameter}
                </otherwise>
            </choose>
        </foreach>
    </sql>

    <sql id="paginationSql">
        LIMIT #{offset}, #{maxResults}
    </sql>
</mapper>